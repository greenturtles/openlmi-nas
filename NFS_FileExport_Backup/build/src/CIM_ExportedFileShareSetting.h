/*
**==============================================================================
**
** CAUTION: This file generated by KonkretCMPI. Please do not edit.
**
**==============================================================================
*/

#ifndef _konkrete_CIM_ExportedFileShareSetting_h
#define _konkrete_CIM_ExportedFileShareSetting_h

#include <konkret/konkret.h>

#include <strings.h>

/*
**==============================================================================
**
** struct CIM_ExportedFileShareSettingRef 
**
**==============================================================================
*/

/* classname=CIM_ExportedFileShareSetting */
typedef struct _CIM_ExportedFileShareSettingRef
{
    KBase __base;
    /* CIM_ManagedElement features */
    const KString InstanceID;
    /* CIM_SettingData features */
    /* CIM_ExportedFileShareSetting features */
}
CIM_ExportedFileShareSettingRef;

static const unsigned char __CIM_ExportedFileShareSettingRef_sig[] =
{
    0x1c,0x43,0x49,0x4d,0x5f,0x45,0x78,0x70,0x6f,0x72,0x74,0x65,0x64,0x46,0x69,
    0x6c,0x65,0x53,0x68,0x61,0x72,0x65,0x53,0x65,0x74,0x74,0x69,0x6e,0x67,0x00,
    0x01,0x4c,0x0a,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x44,0x00,
};

KINLINE void CIM_ExportedFileShareSettingRef_Init(
    CIM_ExportedFileShareSettingRef* self,
    const CMPIBroker* cb,
    const char* ns)
{
    const unsigned char* sig = __CIM_ExportedFileShareSettingRef_sig;
    KBase_Init(&self->__base, cb, sizeof(*self), sig, ns);
}

KINLINE CMPIStatus CIM_ExportedFileShareSettingRef_InitFromInstance(
    CIM_ExportedFileShareSettingRef* self,
    const CMPIBroker* cb,
    const CMPIInstance* x)
{
    CIM_ExportedFileShareSettingRef_Init(self, cb, NULL);
    return KBase_FromInstance(&self->__base, x);
}

KINLINE CMPIStatus CIM_ExportedFileShareSettingRef_InitFromObjectPath(
    CIM_ExportedFileShareSettingRef* self,
    const CMPIBroker* cb,
    const CMPIObjectPath* x)
{
    CIM_ExportedFileShareSettingRef_Init(self, cb, NULL);
    return KBase_FromObjectPath(&self->__base, x);
}

KINLINE void CIM_ExportedFileShareSettingRef_Print(
    const CIM_ExportedFileShareSettingRef* self,
    FILE* os)
{
    KBase_Print(os, &self->__base, 'r');
}

KINLINE CMPIInstance* CIM_ExportedFileShareSettingRef_ToInstance(
    const CIM_ExportedFileShareSettingRef* self,
    CMPIStatus* status)
{
    return KBase_ToInstance(&self->__base, status);
}

KINLINE CMPIObjectPath* CIM_ExportedFileShareSettingRef_ToObjectPath(
    const CIM_ExportedFileShareSettingRef* self,
    CMPIStatus* status)
{
    return KBase_ToObjectPath(&self->__base, status);
}

KINLINE const char* CIM_ExportedFileShareSettingRef_NameSpace(
    CIM_ExportedFileShareSettingRef* self)
{
    if (self && self->__base.magic == KMAGIC)
        return self->__base.ns ? KChars(self->__base.ns) : NULL;
    return NULL;
}

KINLINE void CIM_ExportedFileShareSettingRef_SetString_InstanceID(
    CIM_ExportedFileShareSettingRef* self,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->InstanceID;
        KString_SetString(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSettingRef_Set_InstanceID(
    CIM_ExportedFileShareSettingRef* self,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->InstanceID;
        KString_Set(field, self->__base.cb, s);
    }
}

KINLINE void CIM_ExportedFileShareSettingRef_Null_InstanceID(
    CIM_ExportedFileShareSettingRef* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->InstanceID;
        KString_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSettingRef_Clr_InstanceID(
    CIM_ExportedFileShareSettingRef* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->InstanceID;
        KString_Clr(field);
    }
}

/*
**==============================================================================
**
** struct CIM_ExportedFileShareSetting 
**
**==============================================================================
*/

/* classname=CIM_ExportedFileShareSetting */
typedef struct _CIM_ExportedFileShareSetting
{
    KBase __base;
    /* CIM_ManagedElement features */
    const KString InstanceID;
    const KString Caption;
    const KString Description;
    const KString ElementName;
    const KUint64 Generation;
    /* CIM_SettingData features */
    const KString ConfigurationName;
    const KUint16 ChangeableType;
    /* CIM_ExportedFileShareSetting features */
    const KUint16 FileSharingProtocol;
    const KStringA ProtocolVersions;
    const KUint16 InitialEnabledState;
    const KString OtherEnabledState;
    const KUint16 DefaultReadWrite;
    const KUint16 DefaultExecute;
    const KUint16 ExecuteSupport;
    const KUint16 DefaultUserIdSupported;
    const KUint16 RootAccess;
    const KUint16 WritePolicy;
    const KUint16 AccessPoints;
}
CIM_ExportedFileShareSetting;

static const unsigned char __CIM_ExportedFileShareSetting_sig[] =
{
    0x1c,0x43,0x49,0x4d,0x5f,0x45,0x78,0x70,0x6f,0x72,0x74,0x65,0x64,0x46,0x69,
    0x6c,0x65,0x53,0x68,0x61,0x72,0x65,0x53,0x65,0x74,0x74,0x69,0x6e,0x67,0x00,
    0x12,0x4c,0x0a,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x44,0x00,0x0c,
    0x07,0x43,0x61,0x70,0x74,0x69,0x6f,0x6e,0x00,0x0c,0x0b,0x44,0x65,0x73,0x63,
    0x72,0x69,0x70,0x74,0x69,0x6f,0x6e,0x00,0x0c,0x0b,0x45,0x6c,0x65,0x6d,0x65,
    0x6e,0x74,0x4e,0x61,0x6d,0x65,0x00,0x07,0x0a,0x47,0x65,0x6e,0x65,0x72,0x61,
    0x74,0x69,0x6f,0x6e,0x00,0x0c,0x11,0x43,0x6f,0x6e,0x66,0x69,0x67,0x75,0x72,
    0x61,0x74,0x69,0x6f,0x6e,0x4e,0x61,0x6d,0x65,0x00,0x03,0x0e,0x43,0x68,0x61,
    0x6e,0x67,0x65,0x61,0x62,0x6c,0x65,0x54,0x79,0x70,0x65,0x00,0x03,0x13,0x46,
    0x69,0x6c,0x65,0x53,0x68,0x61,0x72,0x69,0x6e,0x67,0x50,0x72,0x6f,0x74,0x6f,
    0x63,0x6f,0x6c,0x00,0x8c,0x10,0x50,0x72,0x6f,0x74,0x6f,0x63,0x6f,0x6c,0x56,
    0x65,0x72,0x73,0x69,0x6f,0x6e,0x73,0x00,0x03,0x13,0x49,0x6e,0x69,0x74,0x69,
    0x61,0x6c,0x45,0x6e,0x61,0x62,0x6c,0x65,0x64,0x53,0x74,0x61,0x74,0x65,0x00,
    0x0c,0x11,0x4f,0x74,0x68,0x65,0x72,0x45,0x6e,0x61,0x62,0x6c,0x65,0x64,0x53,
    0x74,0x61,0x74,0x65,0x00,0x03,0x10,0x44,0x65,0x66,0x61,0x75,0x6c,0x74,0x52,
    0x65,0x61,0x64,0x57,0x72,0x69,0x74,0x65,0x00,0x03,0x0e,0x44,0x65,0x66,0x61,
    0x75,0x6c,0x74,0x45,0x78,0x65,0x63,0x75,0x74,0x65,0x00,0x03,0x0e,0x45,0x78,
    0x65,0x63,0x75,0x74,0x65,0x53,0x75,0x70,0x70,0x6f,0x72,0x74,0x00,0x03,0x16,
    0x44,0x65,0x66,0x61,0x75,0x6c,0x74,0x55,0x73,0x65,0x72,0x49,0x64,0x53,0x75,
    0x70,0x70,0x6f,0x72,0x74,0x65,0x64,0x00,0x03,0x0a,0x52,0x6f,0x6f,0x74,0x41,
    0x63,0x63,0x65,0x73,0x73,0x00,0x03,0x0b,0x57,0x72,0x69,0x74,0x65,0x50,0x6f,
    0x6c,0x69,0x63,0x79,0x00,0x03,0x0c,0x41,0x63,0x63,0x65,0x73,0x73,0x50,0x6f,
    0x69,0x6e,0x74,0x73,0x00,
};

KINLINE void CIM_ExportedFileShareSetting_Init(
    CIM_ExportedFileShareSetting* self,
    const CMPIBroker* cb,
    const char* ns)
{
    const unsigned char* sig = __CIM_ExportedFileShareSetting_sig;
    KBase_Init(&self->__base, cb, sizeof(*self), sig, ns);
}

KINLINE CMPIStatus CIM_ExportedFileShareSetting_InitFromInstance(
    CIM_ExportedFileShareSetting* self,
    const CMPIBroker* cb,
    const CMPIInstance* x)
{
    CIM_ExportedFileShareSetting_Init(self, cb, NULL);
    return KBase_FromInstance(&self->__base, x);
}

KINLINE CMPIStatus CIM_ExportedFileShareSetting_InitFromObjectPath(
    CIM_ExportedFileShareSetting* self,
    const CMPIBroker* cb,
    const CMPIObjectPath* x)
{
    CIM_ExportedFileShareSetting_Init(self, cb, NULL);
    return KBase_FromObjectPath(&self->__base, x);
}

KINLINE void CIM_ExportedFileShareSetting_Print(
    const CIM_ExportedFileShareSetting* self,
    FILE* os)
{
    KBase_Print(os, &self->__base, 'i');
}

KINLINE CMPIInstance* CIM_ExportedFileShareSetting_ToInstance(
    const CIM_ExportedFileShareSetting* self,
    CMPIStatus* status)
{
    return KBase_ToInstance(&self->__base, status);
}

KINLINE CMPIObjectPath* CIM_ExportedFileShareSetting_ToObjectPath(
    const CIM_ExportedFileShareSetting* self,
    CMPIStatus* status)
{
    return KBase_ToObjectPath(&self->__base, status);
}

KINLINE const char* CIM_ExportedFileShareSetting_NameSpace(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
        return self->__base.ns ? KChars(self->__base.ns) : NULL;
    return NULL;
}

KINLINE void CIM_ExportedFileShareSetting_SetString_InstanceID(
    CIM_ExportedFileShareSetting* self,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->InstanceID;
        KString_SetString(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Set_InstanceID(
    CIM_ExportedFileShareSetting* self,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->InstanceID;
        KString_Set(field, self->__base.cb, s);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_InstanceID(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->InstanceID;
        KString_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_InstanceID(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->InstanceID;
        KString_Clr(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_SetString_Caption(
    CIM_ExportedFileShareSetting* self,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Caption;
        KString_SetString(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Set_Caption(
    CIM_ExportedFileShareSetting* self,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Caption;
        KString_Set(field, self->__base.cb, s);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_Caption(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Caption;
        KString_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_Caption(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Caption;
        KString_Clr(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_SetString_Description(
    CIM_ExportedFileShareSetting* self,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Description;
        KString_SetString(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Set_Description(
    CIM_ExportedFileShareSetting* self,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Description;
        KString_Set(field, self->__base.cb, s);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_Description(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Description;
        KString_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_Description(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Description;
        KString_Clr(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_SetString_ElementName(
    CIM_ExportedFileShareSetting* self,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->ElementName;
        KString_SetString(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Set_ElementName(
    CIM_ExportedFileShareSetting* self,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->ElementName;
        KString_Set(field, self->__base.cb, s);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_ElementName(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->ElementName;
        KString_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_ElementName(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->ElementName;
        KString_Clr(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Set_Generation(
    CIM_ExportedFileShareSetting* self,
    CMPIUint64 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint64* field = (KUint64*)&self->Generation;
        KUint64_Set(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_Generation(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint64* field = (KUint64*)&self->Generation;
        KUint64_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_Generation(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint64* field = (KUint64*)&self->Generation;
        KUint64_Clr(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_SetString_ConfigurationName(
    CIM_ExportedFileShareSetting* self,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->ConfigurationName;
        KString_SetString(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Set_ConfigurationName(
    CIM_ExportedFileShareSetting* self,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->ConfigurationName;
        KString_Set(field, self->__base.cb, s);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_ConfigurationName(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->ConfigurationName;
        KString_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_ConfigurationName(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->ConfigurationName;
        KString_Clr(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Set_ChangeableType(
    CIM_ExportedFileShareSetting* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->ChangeableType;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_ChangeableType(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->ChangeableType;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_ChangeableType(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->ChangeableType;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ExportedFileShareSetting_ChangeableType_Enum
{
    CIM_ExportedFileShareSetting_ChangeableType_Not_Changeable___Persistent = 0,
    CIM_ExportedFileShareSetting_ChangeableType_Changeable___Transient = 1,
    CIM_ExportedFileShareSetting_ChangeableType_Changeable___Persistent = 2,
    CIM_ExportedFileShareSetting_ChangeableType_Not_Changeable___Transient = 3,
}
CIM_ExportedFileShareSetting_ChangeableType_Enum;

/* "Not Changeable - Persistent" */
#define CIM_ExportedFileShareSetting_Set_ChangeableType_Not_Changeable___Persistent(SELF) \
    CIM_ExportedFileShareSetting_Set_ChangeableType(SELF, 0)

/* "Changeable - Transient" */
#define CIM_ExportedFileShareSetting_Set_ChangeableType_Changeable___Transient(SELF) \
    CIM_ExportedFileShareSetting_Set_ChangeableType(SELF, 1)

/* "Changeable - Persistent" */
#define CIM_ExportedFileShareSetting_Set_ChangeableType_Changeable___Persistent(SELF) \
    CIM_ExportedFileShareSetting_Set_ChangeableType(SELF, 2)

/* "Not Changeable - Transient" */
#define CIM_ExportedFileShareSetting_Set_ChangeableType_Not_Changeable___Transient(SELF) \
    CIM_ExportedFileShareSetting_Set_ChangeableType(SELF, 3)

KINLINE void CIM_ExportedFileShareSetting_Set_FileSharingProtocol(
    CIM_ExportedFileShareSetting* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->FileSharingProtocol;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_FileSharingProtocol(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->FileSharingProtocol;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_FileSharingProtocol(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->FileSharingProtocol;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ExportedFileShareSetting_FileSharingProtocol_Enum
{
    CIM_ExportedFileShareSetting_FileSharingProtocol_Unknown = 0,
    CIM_ExportedFileShareSetting_FileSharingProtocol_NFS = 2,
    CIM_ExportedFileShareSetting_FileSharingProtocol_CIFS = 3,
    CIM_ExportedFileShareSetting_FileSharingProtocol_DAFS = 4,
    CIM_ExportedFileShareSetting_FileSharingProtocol_WebDAV = 5,
    CIM_ExportedFileShareSetting_FileSharingProtocol_HTTP = 6,
    CIM_ExportedFileShareSetting_FileSharingProtocol_FTP = 7,
    CIM_ExportedFileShareSetting_FileSharingProtocol_DMTF_Reserved = 0,
    CIM_ExportedFileShareSetting_FileSharingProtocol_Vendor_Defined = 0,
}
CIM_ExportedFileShareSetting_FileSharingProtocol_Enum;

/* "Unknown" */
#define CIM_ExportedFileShareSetting_Set_FileSharingProtocol_Unknown(SELF) \
    CIM_ExportedFileShareSetting_Set_FileSharingProtocol(SELF, 0)

/* "NFS" */
#define CIM_ExportedFileShareSetting_Set_FileSharingProtocol_NFS(SELF) \
    CIM_ExportedFileShareSetting_Set_FileSharingProtocol(SELF, 2)

/* "CIFS" */
#define CIM_ExportedFileShareSetting_Set_FileSharingProtocol_CIFS(SELF) \
    CIM_ExportedFileShareSetting_Set_FileSharingProtocol(SELF, 3)

/* "DAFS" */
#define CIM_ExportedFileShareSetting_Set_FileSharingProtocol_DAFS(SELF) \
    CIM_ExportedFileShareSetting_Set_FileSharingProtocol(SELF, 4)

/* "WebDAV" */
#define CIM_ExportedFileShareSetting_Set_FileSharingProtocol_WebDAV(SELF) \
    CIM_ExportedFileShareSetting_Set_FileSharingProtocol(SELF, 5)

/* "HTTP" */
#define CIM_ExportedFileShareSetting_Set_FileSharingProtocol_HTTP(SELF) \
    CIM_ExportedFileShareSetting_Set_FileSharingProtocol(SELF, 6)

/* "FTP" */
#define CIM_ExportedFileShareSetting_Set_FileSharingProtocol_FTP(SELF) \
    CIM_ExportedFileShareSetting_Set_FileSharingProtocol(SELF, 7)

/* "DMTF Reserved" */
#define CIM_ExportedFileShareSetting_Set_FileSharingProtocol_DMTF_Reserved(SELF) \
    CIM_ExportedFileShareSetting_Set_FileSharingProtocol(SELF, 0)

/* "Vendor Defined" */
#define CIM_ExportedFileShareSetting_Set_FileSharingProtocol_Vendor_Defined(SELF) \
    CIM_ExportedFileShareSetting_Set_FileSharingProtocol(SELF, 0)

KINLINE CMPIBoolean CIM_ExportedFileShareSetting_Init_ProtocolVersions(
    CIM_ExportedFileShareSetting* self,
    CMPICount count)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->ProtocolVersions;
        return KStringA_Init(field, self->__base.cb, count);
    }
    return 0;
}

KINLINE void CIM_ExportedFileShareSetting_InitNull_ProtocolVersions(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->ProtocolVersions;
        KStringA_InitNull(field);
    }
}

KINLINE CMPIBoolean CIM_ExportedFileShareSetting_SetString_ProtocolVersions(
    CIM_ExportedFileShareSetting* self,
    CMPICount i,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->ProtocolVersions;
        return KStringA_SetString(field, i, x);
    }
    return 0;
}

KINLINE CMPIBoolean CIM_ExportedFileShareSetting_Set_ProtocolVersions(
    CIM_ExportedFileShareSetting* self,
    CMPICount i,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->ProtocolVersions;
        return KStringA_Set(field, self->__base.cb, i, s);
    }
    return 0;
}

KINLINE KString CIM_ExportedFileShareSetting_GetString_ProtocolVersions(
    CIM_ExportedFileShareSetting* self,
    CMPICount i)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->ProtocolVersions;
        return KStringA_GetString(field, i);
    }
    return KStringA_GetString(NULL, 0);
}

KINLINE const char* CIM_ExportedFileShareSetting_Get_ProtocolVersions(
    CIM_ExportedFileShareSetting* self,
    CMPICount i)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->ProtocolVersions;
        return KStringA_Get(field, i);
    }
    return NULL;
}

KINLINE CMPIBoolean CIM_ExportedFileShareSetting_Null_ProtocolVersions(
    CIM_ExportedFileShareSetting* self,
    CMPICount i)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->ProtocolVersions;
        return KStringA_Null(field, i);
    }
    return 0;
}

KINLINE void CIM_ExportedFileShareSetting_Clr_ProtocolVersions(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->ProtocolVersions;
        KStringA_Clr(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Set_InitialEnabledState(
    CIM_ExportedFileShareSetting* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->InitialEnabledState;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_InitialEnabledState(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->InitialEnabledState;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_InitialEnabledState(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->InitialEnabledState;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ExportedFileShareSetting_InitialEnabledState_Enum
{
    CIM_ExportedFileShareSetting_InitialEnabledState_Unknown = 0,
    CIM_ExportedFileShareSetting_InitialEnabledState_Other = 1,
    CIM_ExportedFileShareSetting_InitialEnabledState_Enabled = 2,
    CIM_ExportedFileShareSetting_InitialEnabledState_Disabled = 3,
    CIM_ExportedFileShareSetting_InitialEnabledState_In_Test = 7,
    CIM_ExportedFileShareSetting_InitialEnabledState_Deferred = 8,
    CIM_ExportedFileShareSetting_InitialEnabledState_Quiesce = 9,
    CIM_ExportedFileShareSetting_InitialEnabledState_DMTF_Reserved = 11,
    CIM_ExportedFileShareSetting_InitialEnabledState_Vendor_Reserved = 32768,
}
CIM_ExportedFileShareSetting_InitialEnabledState_Enum;

/* "Unknown" */
#define CIM_ExportedFileShareSetting_Set_InitialEnabledState_Unknown(SELF) \
    CIM_ExportedFileShareSetting_Set_InitialEnabledState(SELF, 0)

/* "Other" */
#define CIM_ExportedFileShareSetting_Set_InitialEnabledState_Other(SELF) \
    CIM_ExportedFileShareSetting_Set_InitialEnabledState(SELF, 1)

/* "Enabled" */
#define CIM_ExportedFileShareSetting_Set_InitialEnabledState_Enabled(SELF) \
    CIM_ExportedFileShareSetting_Set_InitialEnabledState(SELF, 2)

/* "Disabled" */
#define CIM_ExportedFileShareSetting_Set_InitialEnabledState_Disabled(SELF) \
    CIM_ExportedFileShareSetting_Set_InitialEnabledState(SELF, 3)

/* "In Test" */
#define CIM_ExportedFileShareSetting_Set_InitialEnabledState_In_Test(SELF) \
    CIM_ExportedFileShareSetting_Set_InitialEnabledState(SELF, 7)

/* "Deferred" */
#define CIM_ExportedFileShareSetting_Set_InitialEnabledState_Deferred(SELF) \
    CIM_ExportedFileShareSetting_Set_InitialEnabledState(SELF, 8)

/* "Quiesce" */
#define CIM_ExportedFileShareSetting_Set_InitialEnabledState_Quiesce(SELF) \
    CIM_ExportedFileShareSetting_Set_InitialEnabledState(SELF, 9)

/* "DMTF Reserved" */
#define CIM_ExportedFileShareSetting_Set_InitialEnabledState_DMTF_Reserved(SELF) \
    CIM_ExportedFileShareSetting_Set_InitialEnabledState(SELF, 11)

/* "Vendor Reserved" */
#define CIM_ExportedFileShareSetting_Set_InitialEnabledState_Vendor_Reserved(SELF) \
    CIM_ExportedFileShareSetting_Set_InitialEnabledState(SELF, 32768)

KINLINE void CIM_ExportedFileShareSetting_SetString_OtherEnabledState(
    CIM_ExportedFileShareSetting* self,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->OtherEnabledState;
        KString_SetString(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Set_OtherEnabledState(
    CIM_ExportedFileShareSetting* self,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->OtherEnabledState;
        KString_Set(field, self->__base.cb, s);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_OtherEnabledState(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->OtherEnabledState;
        KString_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_OtherEnabledState(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->OtherEnabledState;
        KString_Clr(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Set_DefaultReadWrite(
    CIM_ExportedFileShareSetting* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->DefaultReadWrite;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_DefaultReadWrite(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->DefaultReadWrite;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_DefaultReadWrite(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->DefaultReadWrite;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ExportedFileShareSetting_DefaultReadWrite_Enum
{
    CIM_ExportedFileShareSetting_DefaultReadWrite_Unknown = 0,
    CIM_ExportedFileShareSetting_DefaultReadWrite_No_Access = 2,
    CIM_ExportedFileShareSetting_DefaultReadWrite_Read_Only = 3,
    CIM_ExportedFileShareSetting_DefaultReadWrite_Read_Write = 4,
    CIM_ExportedFileShareSetting_DefaultReadWrite_DMTF_Reserved = 0,
    CIM_ExportedFileShareSetting_DefaultReadWrite_Vendor_Defined = 0,
}
CIM_ExportedFileShareSetting_DefaultReadWrite_Enum;

/* "Unknown" */
#define CIM_ExportedFileShareSetting_Set_DefaultReadWrite_Unknown(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultReadWrite(SELF, 0)

/* "No Access" */
#define CIM_ExportedFileShareSetting_Set_DefaultReadWrite_No_Access(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultReadWrite(SELF, 2)

/* "Read Only" */
#define CIM_ExportedFileShareSetting_Set_DefaultReadWrite_Read_Only(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultReadWrite(SELF, 3)

/* "Read/Write" */
#define CIM_ExportedFileShareSetting_Set_DefaultReadWrite_Read_Write(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultReadWrite(SELF, 4)

/* "DMTF Reserved" */
#define CIM_ExportedFileShareSetting_Set_DefaultReadWrite_DMTF_Reserved(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultReadWrite(SELF, 0)

/* "Vendor Defined" */
#define CIM_ExportedFileShareSetting_Set_DefaultReadWrite_Vendor_Defined(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultReadWrite(SELF, 0)

KINLINE void CIM_ExportedFileShareSetting_Set_DefaultExecute(
    CIM_ExportedFileShareSetting* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->DefaultExecute;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_DefaultExecute(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->DefaultExecute;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_DefaultExecute(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->DefaultExecute;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ExportedFileShareSetting_DefaultExecute_Enum
{
    CIM_ExportedFileShareSetting_DefaultExecute_Unknown = 0,
    CIM_ExportedFileShareSetting_DefaultExecute_No_Access = 2,
    CIM_ExportedFileShareSetting_DefaultExecute_Execute = 3,
    CIM_ExportedFileShareSetting_DefaultExecute_DMTF_Reserved = 0,
    CIM_ExportedFileShareSetting_DefaultExecute_Vendor_Defined = 0,
}
CIM_ExportedFileShareSetting_DefaultExecute_Enum;

/* "Unknown" */
#define CIM_ExportedFileShareSetting_Set_DefaultExecute_Unknown(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultExecute(SELF, 0)

/* "No Access" */
#define CIM_ExportedFileShareSetting_Set_DefaultExecute_No_Access(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultExecute(SELF, 2)

/* "Execute" */
#define CIM_ExportedFileShareSetting_Set_DefaultExecute_Execute(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultExecute(SELF, 3)

/* "DMTF Reserved" */
#define CIM_ExportedFileShareSetting_Set_DefaultExecute_DMTF_Reserved(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultExecute(SELF, 0)

/* "Vendor Defined" */
#define CIM_ExportedFileShareSetting_Set_DefaultExecute_Vendor_Defined(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultExecute(SELF, 0)

KINLINE void CIM_ExportedFileShareSetting_Set_ExecuteSupport(
    CIM_ExportedFileShareSetting* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->ExecuteSupport;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_ExecuteSupport(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->ExecuteSupport;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_ExecuteSupport(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->ExecuteSupport;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ExportedFileShareSetting_ExecuteSupport_Enum
{
    CIM_ExportedFileShareSetting_ExecuteSupport_Unknown = 0,
    CIM_ExportedFileShareSetting_ExecuteSupport_Not_Supported = 2,
    CIM_ExportedFileShareSetting_ExecuteSupport_Execution_Supported = 3,
    CIM_ExportedFileShareSetting_ExecuteSupport_DMTF_Reserved = 0,
    CIM_ExportedFileShareSetting_ExecuteSupport_Vendor_Defined = 0,
}
CIM_ExportedFileShareSetting_ExecuteSupport_Enum;

/* "Unknown" */
#define CIM_ExportedFileShareSetting_Set_ExecuteSupport_Unknown(SELF) \
    CIM_ExportedFileShareSetting_Set_ExecuteSupport(SELF, 0)

/* "Not Supported" */
#define CIM_ExportedFileShareSetting_Set_ExecuteSupport_Not_Supported(SELF) \
    CIM_ExportedFileShareSetting_Set_ExecuteSupport(SELF, 2)

/* "Execution Supported" */
#define CIM_ExportedFileShareSetting_Set_ExecuteSupport_Execution_Supported(SELF) \
    CIM_ExportedFileShareSetting_Set_ExecuteSupport(SELF, 3)

/* "DMTF Reserved" */
#define CIM_ExportedFileShareSetting_Set_ExecuteSupport_DMTF_Reserved(SELF) \
    CIM_ExportedFileShareSetting_Set_ExecuteSupport(SELF, 0)

/* "Vendor Defined" */
#define CIM_ExportedFileShareSetting_Set_ExecuteSupport_Vendor_Defined(SELF) \
    CIM_ExportedFileShareSetting_Set_ExecuteSupport(SELF, 0)

KINLINE void CIM_ExportedFileShareSetting_Set_DefaultUserIdSupported(
    CIM_ExportedFileShareSetting* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->DefaultUserIdSupported;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_DefaultUserIdSupported(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->DefaultUserIdSupported;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_DefaultUserIdSupported(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->DefaultUserIdSupported;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ExportedFileShareSetting_DefaultUserIdSupported_Enum
{
    CIM_ExportedFileShareSetting_DefaultUserIdSupported_Unknown = 0,
    CIM_ExportedFileShareSetting_DefaultUserIdSupported_No_Default_User_Id = 2,
    CIM_ExportedFileShareSetting_DefaultUserIdSupported_System_Specified_Default_User_Id = 3,
    CIM_ExportedFileShareSetting_DefaultUserIdSupported_Share_Specified_Default_User_Id = 4,
    CIM_ExportedFileShareSetting_DefaultUserIdSupported_DMTF_Reserved = 0,
    CIM_ExportedFileShareSetting_DefaultUserIdSupported_Vendor_Defined = 0,
}
CIM_ExportedFileShareSetting_DefaultUserIdSupported_Enum;

/* "Unknown" */
#define CIM_ExportedFileShareSetting_Set_DefaultUserIdSupported_Unknown(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultUserIdSupported(SELF, 0)

/* "No Default User Id" */
#define CIM_ExportedFileShareSetting_Set_DefaultUserIdSupported_No_Default_User_Id(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultUserIdSupported(SELF, 2)

/* "System-Specified Default User Id" */
#define CIM_ExportedFileShareSetting_Set_DefaultUserIdSupported_System_Specified_Default_User_Id(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultUserIdSupported(SELF, 3)

/* "Share-Specified Default User Id" */
#define CIM_ExportedFileShareSetting_Set_DefaultUserIdSupported_Share_Specified_Default_User_Id(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultUserIdSupported(SELF, 4)

/* "DMTF Reserved" */
#define CIM_ExportedFileShareSetting_Set_DefaultUserIdSupported_DMTF_Reserved(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultUserIdSupported(SELF, 0)

/* "Vendor Defined" */
#define CIM_ExportedFileShareSetting_Set_DefaultUserIdSupported_Vendor_Defined(SELF) \
    CIM_ExportedFileShareSetting_Set_DefaultUserIdSupported(SELF, 0)

KINLINE void CIM_ExportedFileShareSetting_Set_RootAccess(
    CIM_ExportedFileShareSetting* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->RootAccess;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_RootAccess(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->RootAccess;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_RootAccess(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->RootAccess;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ExportedFileShareSetting_RootAccess_Enum
{
    CIM_ExportedFileShareSetting_RootAccess_Unknown = 0,
    CIM_ExportedFileShareSetting_RootAccess_No_Root_Access = 2,
    CIM_ExportedFileShareSetting_RootAccess_Allow_Root_Access = 3,
    CIM_ExportedFileShareSetting_RootAccess_DMTF_Reserved = 0,
    CIM_ExportedFileShareSetting_RootAccess_Vendor_Defined = 0,
}
CIM_ExportedFileShareSetting_RootAccess_Enum;

/* "Unknown" */
#define CIM_ExportedFileShareSetting_Set_RootAccess_Unknown(SELF) \
    CIM_ExportedFileShareSetting_Set_RootAccess(SELF, 0)

/* "No Root Access" */
#define CIM_ExportedFileShareSetting_Set_RootAccess_No_Root_Access(SELF) \
    CIM_ExportedFileShareSetting_Set_RootAccess(SELF, 2)

/* "Allow Root Access" */
#define CIM_ExportedFileShareSetting_Set_RootAccess_Allow_Root_Access(SELF) \
    CIM_ExportedFileShareSetting_Set_RootAccess(SELF, 3)

/* "DMTF Reserved" */
#define CIM_ExportedFileShareSetting_Set_RootAccess_DMTF_Reserved(SELF) \
    CIM_ExportedFileShareSetting_Set_RootAccess(SELF, 0)

/* "Vendor Defined" */
#define CIM_ExportedFileShareSetting_Set_RootAccess_Vendor_Defined(SELF) \
    CIM_ExportedFileShareSetting_Set_RootAccess(SELF, 0)

KINLINE void CIM_ExportedFileShareSetting_Set_WritePolicy(
    CIM_ExportedFileShareSetting* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->WritePolicy;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_WritePolicy(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->WritePolicy;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_WritePolicy(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->WritePolicy;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ExportedFileShareSetting_WritePolicy_Enum
{
    CIM_ExportedFileShareSetting_WritePolicy_Unknown = 0,
    CIM_ExportedFileShareSetting_WritePolicy_Synchronous = 2,
    CIM_ExportedFileShareSetting_WritePolicy_Asynchronous = 3,
    CIM_ExportedFileShareSetting_WritePolicy_DMTF_Reserved = 0,
    CIM_ExportedFileShareSetting_WritePolicy_Vendor_Defined = 0,
}
CIM_ExportedFileShareSetting_WritePolicy_Enum;

/* "Unknown" */
#define CIM_ExportedFileShareSetting_Set_WritePolicy_Unknown(SELF) \
    CIM_ExportedFileShareSetting_Set_WritePolicy(SELF, 0)

/* "Synchronous" */
#define CIM_ExportedFileShareSetting_Set_WritePolicy_Synchronous(SELF) \
    CIM_ExportedFileShareSetting_Set_WritePolicy(SELF, 2)

/* "Asynchronous" */
#define CIM_ExportedFileShareSetting_Set_WritePolicy_Asynchronous(SELF) \
    CIM_ExportedFileShareSetting_Set_WritePolicy(SELF, 3)

/* "DMTF Reserved" */
#define CIM_ExportedFileShareSetting_Set_WritePolicy_DMTF_Reserved(SELF) \
    CIM_ExportedFileShareSetting_Set_WritePolicy(SELF, 0)

/* "Vendor Defined" */
#define CIM_ExportedFileShareSetting_Set_WritePolicy_Vendor_Defined(SELF) \
    CIM_ExportedFileShareSetting_Set_WritePolicy(SELF, 0)

KINLINE void CIM_ExportedFileShareSetting_Set_AccessPoints(
    CIM_ExportedFileShareSetting* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->AccessPoints;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Null_AccessPoints(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->AccessPoints;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ExportedFileShareSetting_Clr_AccessPoints(
    CIM_ExportedFileShareSetting* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->AccessPoints;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ExportedFileShareSetting_AccessPoints_Enum
{
    CIM_ExportedFileShareSetting_AccessPoints_Unknown = 0,
    CIM_ExportedFileShareSetting_AccessPoints_None = 2,
    CIM_ExportedFileShareSetting_AccessPoints_Service_Default = 3,
    CIM_ExportedFileShareSetting_AccessPoints_All = 4,
    CIM_ExportedFileShareSetting_AccessPoints_Named_Points = 5,
    CIM_ExportedFileShareSetting_AccessPoints_DMTF_Reserved = 0,
    CIM_ExportedFileShareSetting_AccessPoints_Vendor_Defined = 0,
}
CIM_ExportedFileShareSetting_AccessPoints_Enum;

/* "Unknown" */
#define CIM_ExportedFileShareSetting_Set_AccessPoints_Unknown(SELF) \
    CIM_ExportedFileShareSetting_Set_AccessPoints(SELF, 0)

/* "None" */
#define CIM_ExportedFileShareSetting_Set_AccessPoints_None(SELF) \
    CIM_ExportedFileShareSetting_Set_AccessPoints(SELF, 2)

/* "Service Default" */
#define CIM_ExportedFileShareSetting_Set_AccessPoints_Service_Default(SELF) \
    CIM_ExportedFileShareSetting_Set_AccessPoints(SELF, 3)

/* "All" */
#define CIM_ExportedFileShareSetting_Set_AccessPoints_All(SELF) \
    CIM_ExportedFileShareSetting_Set_AccessPoints(SELF, 4)

/* "Named Points" */
#define CIM_ExportedFileShareSetting_Set_AccessPoints_Named_Points(SELF) \
    CIM_ExportedFileShareSetting_Set_AccessPoints(SELF, 5)

/* "DMTF Reserved" */
#define CIM_ExportedFileShareSetting_Set_AccessPoints_DMTF_Reserved(SELF) \
    CIM_ExportedFileShareSetting_Set_AccessPoints(SELF, 0)

/* "Vendor Defined" */
#define CIM_ExportedFileShareSetting_Set_AccessPoints_Vendor_Defined(SELF) \
    CIM_ExportedFileShareSetting_Set_AccessPoints(SELF, 0)

/*
**==============================================================================
**
** CIM_ExportedFileShareSetting methods
**
**==============================================================================
*/

KINLINE CMPIStatus CIM_ExportedFileShareSetting_DispatchMethod(
    const CMPIBroker* cb,
    CMPIMethodMI* mi,
    const CMPIContext* cc,
    const CMPIResult* cr,
    const CMPIObjectPath* cop,
    const char* meth,
    const CMPIArgs* in,
    CMPIArgs* out)
{
    CIM_ExportedFileShareSettingRef self;

    KReturnIf(CIM_ExportedFileShareSettingRef_InitFromObjectPath(&self, cb, cop));


    KReturn(ERR_METHOD_NOT_FOUND);
}

#define CIM_ExportedFileShareSetting_ClassName "CIM_ExportedFileShareSetting"

#endif /* _konkrete_CIM_ExportedFileShareSetting_h */
