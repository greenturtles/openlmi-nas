/*
**==============================================================================
**
** CAUTION: This file generated by KonkretCMPI. Please do not edit.
**
**==============================================================================
*/

#ifndef _konkrete_CIM_ManagedSystemElement_h
#define _konkrete_CIM_ManagedSystemElement_h

#include <konkret/konkret.h>

#include <strings.h>

/*
**==============================================================================
**
** struct CIM_ManagedSystemElementRef 
**
**==============================================================================
*/

/* classname=CIM_ManagedSystemElement */
typedef struct _CIM_ManagedSystemElementRef
{
    KBase __base;
    /* CIM_ManagedElement features */
    /* CIM_ManagedSystemElement features */
}
CIM_ManagedSystemElementRef;

static const unsigned char __CIM_ManagedSystemElementRef_sig[] =
{
    0x18,0x43,0x49,0x4d,0x5f,0x4d,0x61,0x6e,0x61,0x67,0x65,0x64,0x53,0x79,0x73,
    0x74,0x65,0x6d,0x45,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x00,0x00,
};

KINLINE void CIM_ManagedSystemElementRef_Init(
    CIM_ManagedSystemElementRef* self,
    const CMPIBroker* cb,
    const char* ns)
{
    const unsigned char* sig = __CIM_ManagedSystemElementRef_sig;
    KBase_Init(&self->__base, cb, sizeof(*self), sig, ns);
}

KINLINE CMPIStatus CIM_ManagedSystemElementRef_InitFromInstance(
    CIM_ManagedSystemElementRef* self,
    const CMPIBroker* cb,
    const CMPIInstance* x)
{
    CIM_ManagedSystemElementRef_Init(self, cb, NULL);
    return KBase_FromInstance(&self->__base, x);
}

KINLINE CMPIStatus CIM_ManagedSystemElementRef_InitFromObjectPath(
    CIM_ManagedSystemElementRef* self,
    const CMPIBroker* cb,
    const CMPIObjectPath* x)
{
    CIM_ManagedSystemElementRef_Init(self, cb, NULL);
    return KBase_FromObjectPath(&self->__base, x);
}

KINLINE void CIM_ManagedSystemElementRef_Print(
    const CIM_ManagedSystemElementRef* self,
    FILE* os)
{
    KBase_Print(os, &self->__base, 'r');
}

KINLINE CMPIInstance* CIM_ManagedSystemElementRef_ToInstance(
    const CIM_ManagedSystemElementRef* self,
    CMPIStatus* status)
{
    return KBase_ToInstance(&self->__base, status);
}

KINLINE CMPIObjectPath* CIM_ManagedSystemElementRef_ToObjectPath(
    const CIM_ManagedSystemElementRef* self,
    CMPIStatus* status)
{
    return KBase_ToObjectPath(&self->__base, status);
}

KINLINE const char* CIM_ManagedSystemElementRef_NameSpace(
    CIM_ManagedSystemElementRef* self)
{
    if (self && self->__base.magic == KMAGIC)
        return self->__base.ns ? KChars(self->__base.ns) : NULL;
    return NULL;
}

/*
**==============================================================================
**
** struct CIM_ManagedSystemElement 
**
**==============================================================================
*/

/* classname=CIM_ManagedSystemElement */
typedef struct _CIM_ManagedSystemElement
{
    KBase __base;
    /* CIM_ManagedElement features */
    const KString InstanceID;
    const KString Caption;
    const KString Description;
    const KString ElementName;
    const KUint64 Generation;
    /* CIM_ManagedSystemElement features */
    const KDateTime InstallDate;
    const KString Name;
    const KUint16A OperationalStatus;
    const KStringA StatusDescriptions;
    const KString Status;
    const KUint16 HealthState;
    const KUint16 CommunicationStatus;
    const KUint16 DetailedStatus;
    const KUint16 OperatingStatus;
    const KUint16 PrimaryStatus;
}
CIM_ManagedSystemElement;

static const unsigned char __CIM_ManagedSystemElement_sig[] =
{
    0x18,0x43,0x49,0x4d,0x5f,0x4d,0x61,0x6e,0x61,0x67,0x65,0x64,0x53,0x79,0x73,
    0x74,0x65,0x6d,0x45,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x00,0x0f,0x0c,0x0a,0x49,
    0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x44,0x00,0x0c,0x07,0x43,0x61,0x70,
    0x74,0x69,0x6f,0x6e,0x00,0x0c,0x0b,0x44,0x65,0x73,0x63,0x72,0x69,0x70,0x74,
    0x69,0x6f,0x6e,0x00,0x0c,0x0b,0x45,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x4e,0x61,
    0x6d,0x65,0x00,0x07,0x0a,0x47,0x65,0x6e,0x65,0x72,0x61,0x74,0x69,0x6f,0x6e,
    0x00,0x0d,0x0b,0x49,0x6e,0x73,0x74,0x61,0x6c,0x6c,0x44,0x61,0x74,0x65,0x00,
    0x0c,0x04,0x4e,0x61,0x6d,0x65,0x00,0x83,0x11,0x4f,0x70,0x65,0x72,0x61,0x74,
    0x69,0x6f,0x6e,0x61,0x6c,0x53,0x74,0x61,0x74,0x75,0x73,0x00,0x8c,0x12,0x53,
    0x74,0x61,0x74,0x75,0x73,0x44,0x65,0x73,0x63,0x72,0x69,0x70,0x74,0x69,0x6f,
    0x6e,0x73,0x00,0x0c,0x06,0x53,0x74,0x61,0x74,0x75,0x73,0x00,0x03,0x0b,0x48,
    0x65,0x61,0x6c,0x74,0x68,0x53,0x74,0x61,0x74,0x65,0x00,0x03,0x13,0x43,0x6f,
    0x6d,0x6d,0x75,0x6e,0x69,0x63,0x61,0x74,0x69,0x6f,0x6e,0x53,0x74,0x61,0x74,
    0x75,0x73,0x00,0x03,0x0e,0x44,0x65,0x74,0x61,0x69,0x6c,0x65,0x64,0x53,0x74,
    0x61,0x74,0x75,0x73,0x00,0x03,0x0f,0x4f,0x70,0x65,0x72,0x61,0x74,0x69,0x6e,
    0x67,0x53,0x74,0x61,0x74,0x75,0x73,0x00,0x03,0x0d,0x50,0x72,0x69,0x6d,0x61,
    0x72,0x79,0x53,0x74,0x61,0x74,0x75,0x73,0x00,
};

KINLINE void CIM_ManagedSystemElement_Init(
    CIM_ManagedSystemElement* self,
    const CMPIBroker* cb,
    const char* ns)
{
    const unsigned char* sig = __CIM_ManagedSystemElement_sig;
    KBase_Init(&self->__base, cb, sizeof(*self), sig, ns);
}

KINLINE CMPIStatus CIM_ManagedSystemElement_InitFromInstance(
    CIM_ManagedSystemElement* self,
    const CMPIBroker* cb,
    const CMPIInstance* x)
{
    CIM_ManagedSystemElement_Init(self, cb, NULL);
    return KBase_FromInstance(&self->__base, x);
}

KINLINE CMPIStatus CIM_ManagedSystemElement_InitFromObjectPath(
    CIM_ManagedSystemElement* self,
    const CMPIBroker* cb,
    const CMPIObjectPath* x)
{
    CIM_ManagedSystemElement_Init(self, cb, NULL);
    return KBase_FromObjectPath(&self->__base, x);
}

KINLINE void CIM_ManagedSystemElement_Print(
    const CIM_ManagedSystemElement* self,
    FILE* os)
{
    KBase_Print(os, &self->__base, 'i');
}

KINLINE CMPIInstance* CIM_ManagedSystemElement_ToInstance(
    const CIM_ManagedSystemElement* self,
    CMPIStatus* status)
{
    return KBase_ToInstance(&self->__base, status);
}

KINLINE CMPIObjectPath* CIM_ManagedSystemElement_ToObjectPath(
    const CIM_ManagedSystemElement* self,
    CMPIStatus* status)
{
    return KBase_ToObjectPath(&self->__base, status);
}

KINLINE const char* CIM_ManagedSystemElement_NameSpace(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
        return self->__base.ns ? KChars(self->__base.ns) : NULL;
    return NULL;
}

KINLINE void CIM_ManagedSystemElement_SetString_InstanceID(
    CIM_ManagedSystemElement* self,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->InstanceID;
        KString_SetString(field, x);
    }
}

KINLINE void CIM_ManagedSystemElement_Set_InstanceID(
    CIM_ManagedSystemElement* self,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->InstanceID;
        KString_Set(field, self->__base.cb, s);
    }
}

KINLINE void CIM_ManagedSystemElement_Null_InstanceID(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->InstanceID;
        KString_Null(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Clr_InstanceID(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->InstanceID;
        KString_Clr(field);
    }
}

KINLINE void CIM_ManagedSystemElement_SetString_Caption(
    CIM_ManagedSystemElement* self,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Caption;
        KString_SetString(field, x);
    }
}

KINLINE void CIM_ManagedSystemElement_Set_Caption(
    CIM_ManagedSystemElement* self,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Caption;
        KString_Set(field, self->__base.cb, s);
    }
}

KINLINE void CIM_ManagedSystemElement_Null_Caption(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Caption;
        KString_Null(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Clr_Caption(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Caption;
        KString_Clr(field);
    }
}

KINLINE void CIM_ManagedSystemElement_SetString_Description(
    CIM_ManagedSystemElement* self,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Description;
        KString_SetString(field, x);
    }
}

KINLINE void CIM_ManagedSystemElement_Set_Description(
    CIM_ManagedSystemElement* self,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Description;
        KString_Set(field, self->__base.cb, s);
    }
}

KINLINE void CIM_ManagedSystemElement_Null_Description(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Description;
        KString_Null(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Clr_Description(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Description;
        KString_Clr(field);
    }
}

KINLINE void CIM_ManagedSystemElement_SetString_ElementName(
    CIM_ManagedSystemElement* self,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->ElementName;
        KString_SetString(field, x);
    }
}

KINLINE void CIM_ManagedSystemElement_Set_ElementName(
    CIM_ManagedSystemElement* self,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->ElementName;
        KString_Set(field, self->__base.cb, s);
    }
}

KINLINE void CIM_ManagedSystemElement_Null_ElementName(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->ElementName;
        KString_Null(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Clr_ElementName(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->ElementName;
        KString_Clr(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Set_Generation(
    CIM_ManagedSystemElement* self,
    CMPIUint64 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint64* field = (KUint64*)&self->Generation;
        KUint64_Set(field, x);
    }
}

KINLINE void CIM_ManagedSystemElement_Null_Generation(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint64* field = (KUint64*)&self->Generation;
        KUint64_Null(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Clr_Generation(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint64* field = (KUint64*)&self->Generation;
        KUint64_Clr(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Set_InstallDate(
    CIM_ManagedSystemElement* self,
    CMPIDateTime* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KDateTime* field = (KDateTime*)&self->InstallDate;
        KDateTime_Set(field, x);
    }
}

KINLINE void CIM_ManagedSystemElement_Null_InstallDate(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KDateTime* field = (KDateTime*)&self->InstallDate;
        KDateTime_Null(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Clr_InstallDate(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KDateTime* field = (KDateTime*)&self->InstallDate;
        KDateTime_Clr(field);
    }
}

KINLINE void CIM_ManagedSystemElement_SetString_Name(
    CIM_ManagedSystemElement* self,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Name;
        KString_SetString(field, x);
    }
}

KINLINE void CIM_ManagedSystemElement_Set_Name(
    CIM_ManagedSystemElement* self,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Name;
        KString_Set(field, self->__base.cb, s);
    }
}

KINLINE void CIM_ManagedSystemElement_Null_Name(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Name;
        KString_Null(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Clr_Name(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Name;
        KString_Clr(field);
    }
}

KINLINE CMPIBoolean CIM_ManagedSystemElement_Init_OperationalStatus(
    CIM_ManagedSystemElement* self,
    CMPICount count)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16A* field = (KUint16A*)&self->OperationalStatus;
        return KUint16A_Init(field, self->__base.cb, count);
    }
    return 0;
}

KINLINE void CIM_ManagedSystemElement_InitNull_OperationalStatus(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16A* field = (KUint16A*)&self->OperationalStatus;
        KUint16A_InitNull(field);
    }
}

KINLINE CMPIBoolean CIM_ManagedSystemElement_Set_OperationalStatus(
    CIM_ManagedSystemElement* self,
    CMPICount i,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16A* field = (KUint16A*)&self->OperationalStatus;
        return KUint16A_Set(field, i, x);
    }
    return 0;
}

KINLINE KUint16 CIM_ManagedSystemElement_Get_OperationalStatus(
    CIM_ManagedSystemElement* self,
    CMPICount i)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16A* field = (KUint16A*)&self->OperationalStatus;
        return KUint16A_Get(field, i);
    }
    return KUint16A_Get(NULL, 0);
}

KINLINE CMPIBoolean CIM_ManagedSystemElement_Null_OperationalStatus(
    CIM_ManagedSystemElement* self,
    CMPICount i)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16A* field = (KUint16A*)&self->OperationalStatus;
        return KUint16A_Null(field, i);
    }
    return 0;
}

KINLINE void CIM_ManagedSystemElement_Clr_OperationalStatus(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16A* field = (KUint16A*)&self->OperationalStatus;
        KUint16A_Clr(field);
    }
}

typedef enum _CIM_ManagedSystemElement_OperationalStatus_Enum
{
    CIM_ManagedSystemElement_OperationalStatus_Unknown = 0,
    CIM_ManagedSystemElement_OperationalStatus_Other = 1,
    CIM_ManagedSystemElement_OperationalStatus_OK = 2,
    CIM_ManagedSystemElement_OperationalStatus_Degraded = 3,
    CIM_ManagedSystemElement_OperationalStatus_Stressed = 4,
    CIM_ManagedSystemElement_OperationalStatus_Predictive_Failure = 5,
    CIM_ManagedSystemElement_OperationalStatus_Error = 6,
    CIM_ManagedSystemElement_OperationalStatus_Non_Recoverable_Error = 7,
    CIM_ManagedSystemElement_OperationalStatus_Starting = 8,
    CIM_ManagedSystemElement_OperationalStatus_Stopping = 9,
    CIM_ManagedSystemElement_OperationalStatus_Stopped = 10,
    CIM_ManagedSystemElement_OperationalStatus_In_Service = 11,
    CIM_ManagedSystemElement_OperationalStatus_No_Contact = 12,
    CIM_ManagedSystemElement_OperationalStatus_Lost_Communication = 13,
    CIM_ManagedSystemElement_OperationalStatus_Aborted = 14,
    CIM_ManagedSystemElement_OperationalStatus_Dormant = 15,
    CIM_ManagedSystemElement_OperationalStatus_Supporting_Entity_in_Error = 16,
    CIM_ManagedSystemElement_OperationalStatus_Completed = 17,
    CIM_ManagedSystemElement_OperationalStatus_Power_Mode = 18,
    CIM_ManagedSystemElement_OperationalStatus_Relocating = 19,
    CIM_ManagedSystemElement_OperationalStatus_DMTF_Reserved = 0,
    CIM_ManagedSystemElement_OperationalStatus_Vendor_Reserved = 0,
}
CIM_ManagedSystemElement_OperationalStatus_Enum;

/* "Unknown" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Unknown(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 0)

/* "Other" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Other(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 1)

/* "OK" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_OK(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 2)

/* "Degraded" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Degraded(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 3)

/* "Stressed" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Stressed(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 4)

/* "Predictive Failure" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Predictive_Failure(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 5)

/* "Error" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Error(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 6)

/* "Non-Recoverable Error" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Non_Recoverable_Error(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 7)

/* "Starting" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Starting(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 8)

/* "Stopping" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Stopping(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 9)

/* "Stopped" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Stopped(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 10)

/* "In Service" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_In_Service(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 11)

/* "No Contact" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_No_Contact(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 12)

/* "Lost Communication" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Lost_Communication(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 13)

/* "Aborted" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Aborted(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 14)

/* "Dormant" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Dormant(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 15)

/* "Supporting Entity in Error" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Supporting_Entity_in_Error(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 16)

/* "Completed" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Completed(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 17)

/* "Power Mode" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Power_Mode(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 18)

/* "Relocating" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Relocating(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 19)

/* "DMTF Reserved" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_DMTF_Reserved(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 0)

/* "Vendor Reserved" */
#define CIM_ManagedSystemElement_Set_OperationalStatus_Vendor_Reserved(SELF, INDEX)\
    CIM_ManagedSystemElement_Set_OperationalStatus(SELF, INDEX, 0)

KINLINE CMPIBoolean CIM_ManagedSystemElement_Init_StatusDescriptions(
    CIM_ManagedSystemElement* self,
    CMPICount count)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->StatusDescriptions;
        return KStringA_Init(field, self->__base.cb, count);
    }
    return 0;
}

KINLINE void CIM_ManagedSystemElement_InitNull_StatusDescriptions(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->StatusDescriptions;
        KStringA_InitNull(field);
    }
}

KINLINE CMPIBoolean CIM_ManagedSystemElement_SetString_StatusDescriptions(
    CIM_ManagedSystemElement* self,
    CMPICount i,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->StatusDescriptions;
        return KStringA_SetString(field, i, x);
    }
    return 0;
}

KINLINE CMPIBoolean CIM_ManagedSystemElement_Set_StatusDescriptions(
    CIM_ManagedSystemElement* self,
    CMPICount i,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->StatusDescriptions;
        return KStringA_Set(field, self->__base.cb, i, s);
    }
    return 0;
}

KINLINE KString CIM_ManagedSystemElement_GetString_StatusDescriptions(
    CIM_ManagedSystemElement* self,
    CMPICount i)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->StatusDescriptions;
        return KStringA_GetString(field, i);
    }
    return KStringA_GetString(NULL, 0);
}

KINLINE const char* CIM_ManagedSystemElement_Get_StatusDescriptions(
    CIM_ManagedSystemElement* self,
    CMPICount i)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->StatusDescriptions;
        return KStringA_Get(field, i);
    }
    return NULL;
}

KINLINE CMPIBoolean CIM_ManagedSystemElement_Null_StatusDescriptions(
    CIM_ManagedSystemElement* self,
    CMPICount i)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->StatusDescriptions;
        return KStringA_Null(field, i);
    }
    return 0;
}

KINLINE void CIM_ManagedSystemElement_Clr_StatusDescriptions(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KStringA* field = (KStringA*)&self->StatusDescriptions;
        KStringA_Clr(field);
    }
}

KINLINE void CIM_ManagedSystemElement_SetString_Status(
    CIM_ManagedSystemElement* self,
    CMPIString* x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Status;
        KString_SetString(field, x);
    }
}

KINLINE void CIM_ManagedSystemElement_Set_Status(
    CIM_ManagedSystemElement* self,
    const char* s)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Status;
        KString_Set(field, self->__base.cb, s);
    }
}

KINLINE void CIM_ManagedSystemElement_Null_Status(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Status;
        KString_Null(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Clr_Status(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KString* field = (KString*)&self->Status;
        KString_Clr(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Set_HealthState(
    CIM_ManagedSystemElement* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->HealthState;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ManagedSystemElement_Null_HealthState(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->HealthState;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Clr_HealthState(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->HealthState;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ManagedSystemElement_HealthState_Enum
{
    CIM_ManagedSystemElement_HealthState_Unknown = 0,
    CIM_ManagedSystemElement_HealthState_OK = 5,
    CIM_ManagedSystemElement_HealthState_Degraded_Warning = 10,
    CIM_ManagedSystemElement_HealthState_Minor_failure = 15,
    CIM_ManagedSystemElement_HealthState_Major_failure = 20,
    CIM_ManagedSystemElement_HealthState_Critical_failure = 25,
    CIM_ManagedSystemElement_HealthState_Non_recoverable_error = 30,
    CIM_ManagedSystemElement_HealthState_DMTF_Reserved = 0,
    CIM_ManagedSystemElement_HealthState_Vendor_Specific = 32768,
}
CIM_ManagedSystemElement_HealthState_Enum;

/* "Unknown" */
#define CIM_ManagedSystemElement_Set_HealthState_Unknown(SELF) \
    CIM_ManagedSystemElement_Set_HealthState(SELF, 0)

/* "OK" */
#define CIM_ManagedSystemElement_Set_HealthState_OK(SELF) \
    CIM_ManagedSystemElement_Set_HealthState(SELF, 5)

/* "Degraded/Warning" */
#define CIM_ManagedSystemElement_Set_HealthState_Degraded_Warning(SELF) \
    CIM_ManagedSystemElement_Set_HealthState(SELF, 10)

/* "Minor failure" */
#define CIM_ManagedSystemElement_Set_HealthState_Minor_failure(SELF) \
    CIM_ManagedSystemElement_Set_HealthState(SELF, 15)

/* "Major failure" */
#define CIM_ManagedSystemElement_Set_HealthState_Major_failure(SELF) \
    CIM_ManagedSystemElement_Set_HealthState(SELF, 20)

/* "Critical failure" */
#define CIM_ManagedSystemElement_Set_HealthState_Critical_failure(SELF) \
    CIM_ManagedSystemElement_Set_HealthState(SELF, 25)

/* "Non-recoverable error" */
#define CIM_ManagedSystemElement_Set_HealthState_Non_recoverable_error(SELF) \
    CIM_ManagedSystemElement_Set_HealthState(SELF, 30)

/* "DMTF Reserved" */
#define CIM_ManagedSystemElement_Set_HealthState_DMTF_Reserved(SELF) \
    CIM_ManagedSystemElement_Set_HealthState(SELF, 0)

/* "Vendor Specific" */
#define CIM_ManagedSystemElement_Set_HealthState_Vendor_Specific(SELF) \
    CIM_ManagedSystemElement_Set_HealthState(SELF, 32768)

KINLINE void CIM_ManagedSystemElement_Set_CommunicationStatus(
    CIM_ManagedSystemElement* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->CommunicationStatus;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ManagedSystemElement_Null_CommunicationStatus(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->CommunicationStatus;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Clr_CommunicationStatus(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->CommunicationStatus;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ManagedSystemElement_CommunicationStatus_Enum
{
    CIM_ManagedSystemElement_CommunicationStatus_Unknown = 0,
    CIM_ManagedSystemElement_CommunicationStatus_Not_Available = 1,
    CIM_ManagedSystemElement_CommunicationStatus_Communication_OK = 2,
    CIM_ManagedSystemElement_CommunicationStatus_Lost_Communication = 3,
    CIM_ManagedSystemElement_CommunicationStatus_No_Contact = 4,
    CIM_ManagedSystemElement_CommunicationStatus_DMTF_Reserved = 0,
    CIM_ManagedSystemElement_CommunicationStatus_Vendor_Reserved = 0,
}
CIM_ManagedSystemElement_CommunicationStatus_Enum;

/* "Unknown" */
#define CIM_ManagedSystemElement_Set_CommunicationStatus_Unknown(SELF) \
    CIM_ManagedSystemElement_Set_CommunicationStatus(SELF, 0)

/* "Not Available" */
#define CIM_ManagedSystemElement_Set_CommunicationStatus_Not_Available(SELF) \
    CIM_ManagedSystemElement_Set_CommunicationStatus(SELF, 1)

/* "Communication OK" */
#define CIM_ManagedSystemElement_Set_CommunicationStatus_Communication_OK(SELF) \
    CIM_ManagedSystemElement_Set_CommunicationStatus(SELF, 2)

/* "Lost Communication" */
#define CIM_ManagedSystemElement_Set_CommunicationStatus_Lost_Communication(SELF) \
    CIM_ManagedSystemElement_Set_CommunicationStatus(SELF, 3)

/* "No Contact" */
#define CIM_ManagedSystemElement_Set_CommunicationStatus_No_Contact(SELF) \
    CIM_ManagedSystemElement_Set_CommunicationStatus(SELF, 4)

/* "DMTF Reserved" */
#define CIM_ManagedSystemElement_Set_CommunicationStatus_DMTF_Reserved(SELF) \
    CIM_ManagedSystemElement_Set_CommunicationStatus(SELF, 0)

/* "Vendor Reserved" */
#define CIM_ManagedSystemElement_Set_CommunicationStatus_Vendor_Reserved(SELF) \
    CIM_ManagedSystemElement_Set_CommunicationStatus(SELF, 0)

KINLINE void CIM_ManagedSystemElement_Set_DetailedStatus(
    CIM_ManagedSystemElement* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->DetailedStatus;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ManagedSystemElement_Null_DetailedStatus(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->DetailedStatus;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Clr_DetailedStatus(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->DetailedStatus;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ManagedSystemElement_DetailedStatus_Enum
{
    CIM_ManagedSystemElement_DetailedStatus_Not_Available = 0,
    CIM_ManagedSystemElement_DetailedStatus_No_Additional_Information = 1,
    CIM_ManagedSystemElement_DetailedStatus_Stressed = 2,
    CIM_ManagedSystemElement_DetailedStatus_Predictive_Failure = 3,
    CIM_ManagedSystemElement_DetailedStatus_Non_Recoverable_Error = 4,
    CIM_ManagedSystemElement_DetailedStatus_Supporting_Entity_in_Error = 5,
    CIM_ManagedSystemElement_DetailedStatus_DMTF_Reserved = 0,
    CIM_ManagedSystemElement_DetailedStatus_Vendor_Reserved = 0,
}
CIM_ManagedSystemElement_DetailedStatus_Enum;

/* "Not Available" */
#define CIM_ManagedSystemElement_Set_DetailedStatus_Not_Available(SELF) \
    CIM_ManagedSystemElement_Set_DetailedStatus(SELF, 0)

/* "No Additional Information" */
#define CIM_ManagedSystemElement_Set_DetailedStatus_No_Additional_Information(SELF) \
    CIM_ManagedSystemElement_Set_DetailedStatus(SELF, 1)

/* "Stressed" */
#define CIM_ManagedSystemElement_Set_DetailedStatus_Stressed(SELF) \
    CIM_ManagedSystemElement_Set_DetailedStatus(SELF, 2)

/* "Predictive Failure" */
#define CIM_ManagedSystemElement_Set_DetailedStatus_Predictive_Failure(SELF) \
    CIM_ManagedSystemElement_Set_DetailedStatus(SELF, 3)

/* "Non-Recoverable Error" */
#define CIM_ManagedSystemElement_Set_DetailedStatus_Non_Recoverable_Error(SELF) \
    CIM_ManagedSystemElement_Set_DetailedStatus(SELF, 4)

/* "Supporting Entity in Error" */
#define CIM_ManagedSystemElement_Set_DetailedStatus_Supporting_Entity_in_Error(SELF) \
    CIM_ManagedSystemElement_Set_DetailedStatus(SELF, 5)

/* "DMTF Reserved" */
#define CIM_ManagedSystemElement_Set_DetailedStatus_DMTF_Reserved(SELF) \
    CIM_ManagedSystemElement_Set_DetailedStatus(SELF, 0)

/* "Vendor Reserved" */
#define CIM_ManagedSystemElement_Set_DetailedStatus_Vendor_Reserved(SELF) \
    CIM_ManagedSystemElement_Set_DetailedStatus(SELF, 0)

KINLINE void CIM_ManagedSystemElement_Set_OperatingStatus(
    CIM_ManagedSystemElement* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->OperatingStatus;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ManagedSystemElement_Null_OperatingStatus(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->OperatingStatus;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Clr_OperatingStatus(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->OperatingStatus;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ManagedSystemElement_OperatingStatus_Enum
{
    CIM_ManagedSystemElement_OperatingStatus_Unknown = 0,
    CIM_ManagedSystemElement_OperatingStatus_Not_Available = 1,
    CIM_ManagedSystemElement_OperatingStatus_Servicing = 2,
    CIM_ManagedSystemElement_OperatingStatus_Starting = 3,
    CIM_ManagedSystemElement_OperatingStatus_Stopping = 4,
    CIM_ManagedSystemElement_OperatingStatus_Stopped = 5,
    CIM_ManagedSystemElement_OperatingStatus_Aborted = 6,
    CIM_ManagedSystemElement_OperatingStatus_Dormant = 7,
    CIM_ManagedSystemElement_OperatingStatus_Completed = 8,
    CIM_ManagedSystemElement_OperatingStatus_Migrating = 9,
    CIM_ManagedSystemElement_OperatingStatus_Emigrating = 10,
    CIM_ManagedSystemElement_OperatingStatus_Immigrating = 11,
    CIM_ManagedSystemElement_OperatingStatus_Snapshotting = 12,
    CIM_ManagedSystemElement_OperatingStatus_Shutting_Down = 13,
    CIM_ManagedSystemElement_OperatingStatus_In_Test = 14,
    CIM_ManagedSystemElement_OperatingStatus_Transitioning = 15,
    CIM_ManagedSystemElement_OperatingStatus_In_Service = 16,
    CIM_ManagedSystemElement_OperatingStatus_DMTF_Reserved = 0,
    CIM_ManagedSystemElement_OperatingStatus_Vendor_Reserved = 0,
}
CIM_ManagedSystemElement_OperatingStatus_Enum;

/* "Unknown" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Unknown(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 0)

/* "Not Available" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Not_Available(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 1)

/* "Servicing" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Servicing(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 2)

/* "Starting" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Starting(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 3)

/* "Stopping" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Stopping(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 4)

/* "Stopped" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Stopped(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 5)

/* "Aborted" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Aborted(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 6)

/* "Dormant" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Dormant(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 7)

/* "Completed" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Completed(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 8)

/* "Migrating" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Migrating(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 9)

/* "Emigrating" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Emigrating(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 10)

/* "Immigrating" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Immigrating(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 11)

/* "Snapshotting" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Snapshotting(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 12)

/* "Shutting Down" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Shutting_Down(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 13)

/* "In Test" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_In_Test(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 14)

/* "Transitioning" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Transitioning(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 15)

/* "In Service" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_In_Service(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 16)

/* "DMTF Reserved" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_DMTF_Reserved(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 0)

/* "Vendor Reserved" */
#define CIM_ManagedSystemElement_Set_OperatingStatus_Vendor_Reserved(SELF) \
    CIM_ManagedSystemElement_Set_OperatingStatus(SELF, 0)

KINLINE void CIM_ManagedSystemElement_Set_PrimaryStatus(
    CIM_ManagedSystemElement* self,
    CMPIUint16 x)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->PrimaryStatus;
        KUint16_Set(field, x);
    }
}

KINLINE void CIM_ManagedSystemElement_Null_PrimaryStatus(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->PrimaryStatus;
        KUint16_Null(field);
    }
}

KINLINE void CIM_ManagedSystemElement_Clr_PrimaryStatus(
    CIM_ManagedSystemElement* self)
{
    if (self && self->__base.magic == KMAGIC)
    {
        KUint16* field = (KUint16*)&self->PrimaryStatus;
        KUint16_Clr(field);
    }
}

typedef enum _CIM_ManagedSystemElement_PrimaryStatus_Enum
{
    CIM_ManagedSystemElement_PrimaryStatus_Unknown = 0,
    CIM_ManagedSystemElement_PrimaryStatus_OK = 1,
    CIM_ManagedSystemElement_PrimaryStatus_Degraded = 2,
    CIM_ManagedSystemElement_PrimaryStatus_Error = 3,
    CIM_ManagedSystemElement_PrimaryStatus_DMTF_Reserved = 0,
    CIM_ManagedSystemElement_PrimaryStatus_Vendor_Reserved = 0,
}
CIM_ManagedSystemElement_PrimaryStatus_Enum;

/* "Unknown" */
#define CIM_ManagedSystemElement_Set_PrimaryStatus_Unknown(SELF) \
    CIM_ManagedSystemElement_Set_PrimaryStatus(SELF, 0)

/* "OK" */
#define CIM_ManagedSystemElement_Set_PrimaryStatus_OK(SELF) \
    CIM_ManagedSystemElement_Set_PrimaryStatus(SELF, 1)

/* "Degraded" */
#define CIM_ManagedSystemElement_Set_PrimaryStatus_Degraded(SELF) \
    CIM_ManagedSystemElement_Set_PrimaryStatus(SELF, 2)

/* "Error" */
#define CIM_ManagedSystemElement_Set_PrimaryStatus_Error(SELF) \
    CIM_ManagedSystemElement_Set_PrimaryStatus(SELF, 3)

/* "DMTF Reserved" */
#define CIM_ManagedSystemElement_Set_PrimaryStatus_DMTF_Reserved(SELF) \
    CIM_ManagedSystemElement_Set_PrimaryStatus(SELF, 0)

/* "Vendor Reserved" */
#define CIM_ManagedSystemElement_Set_PrimaryStatus_Vendor_Reserved(SELF) \
    CIM_ManagedSystemElement_Set_PrimaryStatus(SELF, 0)

/*
**==============================================================================
**
** CIM_ManagedSystemElement methods
**
**==============================================================================
*/

KINLINE CMPIStatus CIM_ManagedSystemElement_DispatchMethod(
    const CMPIBroker* cb,
    CMPIMethodMI* mi,
    const CMPIContext* cc,
    const CMPIResult* cr,
    const CMPIObjectPath* cop,
    const char* meth,
    const CMPIArgs* in,
    CMPIArgs* out)
{
    CIM_ManagedSystemElementRef self;

    KReturnIf(CIM_ManagedSystemElementRef_InitFromObjectPath(&self, cb, cop));


    KReturn(ERR_METHOD_NOT_FOUND);
}

#define CIM_ManagedSystemElement_ClassName "CIM_ManagedSystemElement"

#endif /* _konkrete_CIM_ManagedSystemElement_h */
